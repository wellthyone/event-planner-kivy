name: Build Android APK and AAB

on:
  push:
    branches: [ master ]  # or [ main ] if your default branch is "main"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'

    - name: Install dependencies and Android SDK
      run: |
        # Install required tools
        sudo apt update
        sudo apt install -y python3-pip openjdk-17-jdk zip unzip git wget

        # Install Python dependencies
        pip install --upgrade pip
        pip install cython buildozer

        # Set up Android SDK
        mkdir -p $HOME/android-sdk/cmdline-tools
        cd $HOME/android-sdk/cmdline-tools
        wget https://dl.google.com/android/repository/commandlinetools-linux-10406996_latest.zip -O tools.zip
        unzip tools.zip
        mv cmdline-tools latest

        # Add SDK tools to PATH and accept licenses
        export ANDROID_SDK_ROOT=$HOME/android-sdk
        export PATH=$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$PATH
        yes | sdkmanager --licenses
        sdkmanager "platform-tools" "platforms;android-31" "build-tools;31.0.0"

    - name: Build APK and AAB
      env:
        ANDROIDSDK: $HOME/android-sdk
        ANDROID_NDK_HOME: $HOME/.buildozer/android/platform/android-ndk-r25b
        PATH: $HOME/android-sdk/cmdline-tools/latest/bin:$HOME/android-sdk/platform-tools:$PATH
      run: |
        buildozer android debug
        buildozer android release

    - name: Upload APK and AAB
      uses: actions/upload-artifact@v4
      with:
        name: eventplanner-builds
        path: |
          bin/*.apk
          bin/*.aab
